name: CI Non-Main Test

on:
  workflow_dispatch:
    inputs:
      LLM_MODEL_NAME:
        description: "LLM Model Name (required)"
        required: true
      LLM_MODEL_API_KEY:
        description: "LLM Model API Key (required)"
        required: true
      GEO_API_KEY:
        description: "GEO_API_KEY for geo test (optional)"
        required: false

env:
  POETRY_VERSION: "1.8.3"
  POETRY_URL: https://install.python-poetry.org


jobs:
  linter_tester:
    strategy:
      fail-fast: true
      matrix:
        python-version: [3.11]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    env:
      LLM_MODEL_NAME: ${{ github.event.inputs.LLM_MODEL_NAME }}
      LLM_MODEL_API_KEY: ${{ github.event.inputs.LLM_MODEL_API_KEY }}
      GEO_API_KEY: ${{ github.event.inputs.GEO_API_KEY }}
      ENABLE_TELEMETRY: 0
      AUTO_MODE: 1
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
        id: setup_python
      # Poetry cache depends on OS, Python version and Poetry version.
      - name: Cache Poetry cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: poetry-cache-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ env.POETRY_VERSION }}
      # virtualenv cache should depends on OS, Python version and `poetry.lock` (and optionally workflow files).
      - name: Cache Packages
        uses: actions/cache@v4
        with:
          path: ~/.local
          key: poetry-local-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/*.yml') }}
      - name: Install Poetry ${{ env.POETRY_VERSION }}
        run: |
          curl -sSL ${{ env.POETRY_URL }} | python - --version ${{ env.POETRY_VERSION }}
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Install project
        run: make install-extra
      - name: Run linter
        run: make lint
      - name: Run tests
        run: |
          set -e  # Exit immediately if a command exits with a non-zero status
          make test
